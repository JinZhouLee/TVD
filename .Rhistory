use_r("TVD_for_one")
library(devtool)
library(devtools)
use_r("TVD_for_one")
devtools::load_all(".")
use_r("TVD")
devtools::load_all(".")
colnames(iris)
devtools::load_all(".")
devtools::load_all(".")
TVD(iris, 1, 5)
TVD(iris, 1:2, 5)
TVD(iris, 1:4, 5) %>% sort()
TVD(iris, c("Sepal.Length", "Sepal.Width", "Petal.Length", "Petal.Width"), "Sepal.Length")
TVD_for_one(iris, 1, 5)
TVD_for_one(iris, "Species", "Sepal.Length")
TVD_for_one(iris, "Species", "Sepal.Length")
TVD_for_one(iris, "Sepal.Length", "Species")
TVD(iris, 1:4, 5)
TVD(iris, c("Sepal.Length", "Sepal.Width", "Petal.Length", "Petal.Width"), "Sepal.Length")
c(1, 5)
c(1, 5) %>% all_of()
all_of()
all_of(c(1, 5))
TVD(iris, c("Sepal.Length", "Sepal.Width"), "Sepal.Length")
TVD(iris, ("Sepal.Length", "Sepal.Width"), "Sepal.Length")
TVD(iris, c("Sepal.Length", "Sepal.Width"), "Sepal.Length")
TVD = function(data, x, y, y_target = c(), n = 512, detail = FALSE){
p = length(x)
ls = list()
for(index in 1:p){
result = TVD_for_one(data %>% select(all_of(c(x[index], y))), 1, 2, y_target = y_target, n = n, detail = detail)
ls[[index]] = result
}
if(!detail){
ls = unlist(ls)
names(ls) = data %>% select(all_of(x)) %>% colnames()
}
return(ls)
}
TVD(iris, 1:4, 5)
TVD(iris, c("Sepal.Length", "Sepal.Width"), "Sepal.Length")
x[index]
c("Sepal.Length", "Sepal.Width")[1]
TVD(iris, c("Sepal.Length", "Sepal.Width"), "Sepal.Length")
TVD(iris, 1:4, 5)
TVD = function(data, x, y, y_target = c(), n = 512, detail = FALSE){
p = length(x)
ls = list()
for(index in 1:p){
result = TVD_for_one(data %>% select(c(x[index], y)), 1, 2, y_target = y_target, n = n, detail = detail)
ls[[index]] = result
}
if(!detail){
ls = unlist(ls)
names(ls) = data %>% select(all_of(x)) %>% colnames()
}
return(ls)
}
TVD(iris, 1:4, 5)
TVD(iris, c("Sepal.Length", "Sepal.Width"), "Sepal.Length")
TVD = function(data, x, y, y_target = c(), n = 512, detail = FALSE){
p = length(x)
ls = list()
for(index in 1:p){
result = TVD_for_one(data %>% select(all_of(c(x[index], y))), 1, 2, y_target = y_target, n = n, detail = detail)
ls[[index]] = result
}
print("yes")
if(!detail){
ls = unlist(ls)
names(ls) = data %>% select(all_of(x)) %>% colnames()
}
return(ls)
}
TVD(iris, 1:4, 5)
TVD(iris, c("Sepal.Length", "Sepal.Width"), "Sepal.Length")
TVD(iris, c("Sepal.Length", "Sepal.Width"), "Sepal.Length")
TVD = function(data, x, y, y_target = c(), n = 512, detail = FALSE){
p = length(x)
ls = list()
for(index in 1:1){
result = TVD_for_one(data %>% select(all_of(c(x[index], y))), 1, 2, y_target = y_target, n = n, detail = detail)
ls[[index]] = result
}
if(!detail){
ls = unlist(ls)
names(ls) = data %>% select(all_of(x)) %>% colnames()
}
return(ls)
}
TVD(iris, 1:4, 5)
TVD(iris, c("Sepal.Length"), "Sepal.Length")
TVD = function(data, x, y, y_target = c(), n = 512, detail = FALSE){
p = length(x)
ls = list()
for(index in 1:p){
result = TVD_for_one(data %>% select(all_of(c(x[index], y))), 1, 2, y_target = y_target, n = n, detail = detail)
ls[[index]] = result
}
if(!detail){
ls = unlist(ls)
names(ls) = data %>% select(all_of(x)) %>% colnames()
}
return(ls)
}
TVD(iris, 1:4, 5)
TVD(iris, c("Sepal.Length"), "Sepal.Length")
TVD(iris, 1, 5)
TVD(iris, c("Sepal.Length"), "Sepal.Length")
TVD(iris, c("Sepal.Length", "Sepal.Width", "Petal.Length", "Petal.Width"), "Species")
use_r("TVD_plot_one")
use_r("TVD_plot")
devtools::load_all(".")
devtools::load_all(".")
devtools::load_all(".")
check()
devtools::load_all(".")
TVD(iris, 1:4, 5)
TVD(iris, c("Sepal.Length", "Sepal.Width", "Petal.Length", "Petal.Width"), "Species")
TVD_for_one(iris, 1, 5)
TVD_for_one(iris, 2, 5)
TVD(iris, c("Sepal.Length", "Petal.Width", "Sepal.Width", "Petal.Length"), "Species")
tvd = TVD(iris, 1, 5, detail = TRUE)
View(tvd)
TVD_plot_one(tvd[[1]])
TVD_plot(iris, 1:4, 5)
TVD_plot(iris, c("Sepal.Length", "Sepal.Width", "Petal.Length", "Petal.Width"), "Species")
check()
build()
install()
release()
spell_check()
spell_check()
release()
0
release()
devtools::check_rhub()
devtools::check_rhubv2()
check_for_cran()
rhub::check_for_cran()
devtools::check_rhub()
release()
check()
build()
release()
release()
detach("package:devtools", unload = TRUE)
devtools::load_all(".")
TVD(iris, 1:4, 5)
TVD_plot(iris, c("Sepal.Length", "Sepal.Width", "Petal.Length", "Petal.Width"), "Species")
library(devtools)
release()
detach("package:devtools", unload = TRUE)
library(TVD)
detach("package:TVD", unload = TRUE)
remove.packages("TVD")
devtools::load_all(".")
TVD_plot(iris, 1:3, 4)
TVD_plot(iris, 1:4, 5)
devtools::load_all(".")
# text font setting
font_add("KaiTi", "C:/Windows/Fonts/kaiu.ttf")
library(showtext) # text font
# text font setting
font_add("KaiTi", "C:/Windows/Fonts/kaiu.ttf")
showtext_auto()
set.seed(1)
data = data.frame(x = c(rnorm(50, 37.5), rnorm(25, 36), rnorm(25, 39)),
y = c(rep(0, 50), rep(1, 50)))
ggplot(data, aes(x = x, y = y)) +
geom_point() +
labs(x = "體溫(°C)", y = "是否死亡")
TVD(data, 1, 2)
TVD_plot(data, 1, 2)
set.seed(1)
data = data.frame(temperature = c(rnorm(50, 37.5), rnorm(25, 36), rnorm(25, 39)),
death = c(rep(0, 50), rep(1, 50)))
ggplot(data, aes(x = x, y = y)) +
geom_point() +
labs(x = "體溫(°C)", y = "是否死亡")
set.seed(1)
data = data.frame(temperature = c(rnorm(50, 37.5), rnorm(25, 36), rnorm(25, 39)),
death = c(rep(0, 50), rep(1, 50)))
ggplot(data, aes(x = temperature, y = death)) +
geom_point() +
labs(x = "體溫(°C)", y = "是否死亡")
TVD_plot(data, 1, 2)
TVD_plot(data, 1, 2)
TVD_plot(iris, 1:4, 5)
TVD_plot(iris, 1:4, 5)
TVD(iris, 1:4, 5)
